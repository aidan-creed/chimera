// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package insurance

import (
	"context"
)

type Querier interface {
	// Fetches a single claim joined with its correspondng policyholder data
	GetClaimDetails(ctx context.Context, id int64) (GetClaimDetailsRow, error)
	// Fetches the business status change history for a specific claim item
	GetClaimStatusHistory(ctx context.Context, itemID int64) ([]GetClaimStatusHistoryRow, error)
	// Fetches the header chunk's source_custom_properties for a given document ID.
	GetDocumentHeader(ctx context.Context, documentID string) (interface{}, error)
	// Fetches and sorts claims by semantic similarity.
	ListClaimsWithVector(ctx context.Context, arg ListClaimsWithVectorParams) ([]ListClaimsWithVectorRow, error)
	// Fetches a paginated and filtered list of insurance claims without vector search.
	ListClaimsWithoutVector(ctx context.Context, arg ListClaimsWithoutVectorParams) ([]ListClaimsWithoutVectorRow, error)
	// Fetches a paginated and filtered list of policyholders.
	ListPolicyholders(ctx context.Context, arg ListPolicyholdersParams) ([]VwPolicyholder, error)
	// Searches comments semantically.
	SearchComments(ctx context.Context, arg SearchCommentsParams) ([]SearchCommentsRow, error)
	// Searches semantically the knowledge base
	SearchKnowledgeChunks(ctx context.Context, arg SearchKnowledgeChunksParams) ([]SearchKnowledgeChunksRow, error)
}

var _ Querier = (*Queries)(nil)
